# 1. Put this file in the same folder as your 'driver' code 
#    (the code containing the 'main' function).

# 2. Edit LIBRARY_DIR to point at the location of your ITensor Library
#    source folder (this is the folder that has options.mk in it)
LIBRARY_DIR=$(HOME)/itensor3

# 3. If your 'main' function is in a file called 'myappname.cc', then
#    set APP to 'myappname'. Running 'make' will compile the app.
#    Running 'make debug' will make a program called 'myappname-g'
#    which includes debugging symbols and can be used in gdb (Gnu debugger);
APP=lindbladmpo

# 4. Add any headers your program depends on here. The make program
#    will auto-detect if these headers have changed and recompile your app.
HEADERS=Pauli.h ModelParameters.h SimulationParameters.h SimpleSquareLattice.h TimeEvolution.h lindbladian.h mps_mpo_utils.h io_utils.h

# 5. For any additional .cc (source) files making up your project,
#    add their full filenames here.
CCFILES=$(APP).cc Pauli.cc TimeEvolution.cc mps_mpo_utils.cc

#################################################################

include $(LIBRARY_DIR)/this_dir.mk
include $(LIBRARY_DIR)/options.mk

TENSOR_HEADERS=$(LIBRARY_DIR)/itensor/core.h

#Directory for the executable
EXEDIR=../bin

#Directory for the .o files
ODIR=../obj

#Directory for the debug .o files
GODIR=../debug_obj

#Mappings --------------
OBJECTS=$(patsubst %.cc,$(ODIR)/%.o, $(CCFILES))
GOBJECTS=$(patsubst %.cc,$(GODIR)/%.o, $(CCFILES))

#Rules ------------------
$(ODIR)/%.o: %.cc $(HEADERS) $(TENSOR_HEADERS)
	mkdir -p $(ODIR)
	$(CCCOM) -c $(CCFLAGS) -o $@ $<

$(GODIR)/%.o: %.cc $(HEADERS) $(TENSOR_HEADERS)
	mkdir -p $(GODIR)
	$(CCCOM) -c $(CCGFLAGS) -o $@ $<

#Targets -----------------

build: $(EXEDIR)/$(APP)
debug: $(EXEDIR)/$(APP)-g

$(EXEDIR)/$(APP): $(OBJECTS) $(ITENSOR_LIBS)
	mkdir -p $(EXEDIR)
	$(CCCOM) $(CCFLAGS) $(OBJECTS) -o $(EXEDIR)/$(APP) $(LIBFLAGS)

$(EXEDIR)/$(APP)-g: $(GOBJECTS) $(ITENSOR_GLIBS)
	mkdir -p $(EXEDIR)
	$(CCCOM) $(CCGFLAGS) $(GOBJECTS) -o $(EXEDIR)/$(APP)-g $(LIBGFLAGS)

clean:
	rm -fr  $(GODIR)/*.o $(ODIR)/*.o $(EXEDIR)/$(APP)-g $(EXEDIR)/$(APP)

